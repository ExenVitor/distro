#!/usr/bin/make -f

# Enabling a single GPU for tests only
# test.sh fails for non-idential multi-GPU
# fix pending : https://github.com/torch/cutorch/issues/239
export CUDA_VISIBLE_DEVICES=0

export BUILD_DIR=build
# export NATIVE_LUAROCKS="1"
# export VERBOSE=1
export BIN_DIR=debian/tmp/usr
export LUAROCKS_ROOT=${CURDIR}/${BIN_DIR}
export LUADIR=${LUAROCKS_ROOT}/share/lua/5.1
export LUAPATH="./?.lua;${LUADIR}/?.lua;${LUADIR}/?/init.lua;${LUA_PATH};"
export LUACPATH="./?.so;${LUAROCKS_DIR}/lib/?.so;${LUA_CPATH};"
export CMPATH="${LUAROCKS_ROOT}/share/cmake/torch ${CMAKE_MODULE_PATH}"
export SCRIPTS_DIR=${LUAROCKS_ROOT}/bin

%:
	dh  $@ --with lua --build-system=cmake --parallel

#	NATIVE_LUAROCKS="1"  dh  $@ --with lua --build-system=cmake --parallel

override_dh_auto_configure:
override_dh_auto_build:
override_dh_auto_test:
	echo Skipping : $@

override_dh_auto_install:
	mkdir -p ${BIN_DIR}
	PREFIX=${LUAROCKS_ROOT} CMAKE_PREFIX_PATH=${LUAROCKS_ROOT} ROCKFLAGS="--tree=${LUAROCKS_ROOT}" LUA_PATH=${LUAPATH} LUA_CPATH=${LUACPATH} $(CURDIR)/install.sh -v -s -b -n

#   non-native luarocks (builing them)
#	PREFIX=${LUAROCKS_ROOT} ROCKFLAGS="--tree=${LUAROCKS_ROOT}" $(CURDIR)/install.sh -v -s -b

# $(CURDIR)/scripts/post-install.sh ${LUAROCKS_ROOT} /usr
